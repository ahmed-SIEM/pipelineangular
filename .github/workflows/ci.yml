name: Frontend CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-sonar-docker:
    runs-on: self-hosted

    steps:
      - name: Cloner le code
        uses: actions/checkout@v4

      - name: Vérifier Node.js installé
        run: |
          echo "Node version:"
          node -v || echo "❌ Node.js non trouvé"
          echo "NPM version:"
          npm -v || echo "❌ NPM non trouvé"

      - name: Installer les dépendances
        run: npm install

      - name: Build Angular App (prod)
        run: npm run build -- --configuration=production

      - name: Installer SonarScanner localement
        run: npm install sonar-scanner --save-dev

      - name: Analyse SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.projectKey=frontend-angular \
            -Dsonar.sources=src \
            -Dsonar.exclusions=**/*.spec.ts,**/node_modules/** \
            -Dsonar.host.url=http://sonarqube.192.168.224.163.nip.io:9000 \
            -Dsonar.login=$SONAR_TOKEN

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push image Docker
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/frontend-app:${{ github.sha }} \
            -t ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest \
            --push .

      - name: Cloner le repo k8s-manifests
        uses: actions/checkout@v4
        with:
          repository: ahmed-SIEM/K8s-manifests
          path: manifests
          token: ${{ secrets.GH_PAT }}

      - name: Update image tag in frontend manifest
        run: |
          sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/frontend-app:${{ github.sha }}|" manifests/frontend/deployment.yaml
          cd manifests
          git config user.name "ahmed-SIEM"
          git config user.email "ahmedsouid008@gmail.com"
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update frontend image to ${{ github.sha }}"
            git push
          fi
